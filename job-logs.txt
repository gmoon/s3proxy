2025-06-15T16:16:54.0541177Z Current runner version: '2.325.0'
2025-06-15T16:16:54.0563859Z ##[group]Runner Image Provisioner
2025-06-15T16:16:54.0564633Z Hosted Compute Agent
2025-06-15T16:16:54.0565328Z Version: 20250529.345
2025-06-15T16:16:54.0565901Z Commit: 22237e57af968c281070ffa8ed912c1b754f9a23
2025-06-15T16:16:54.0566585Z Build Date: 2025-05-29T20:18:30Z
2025-06-15T16:16:54.0567212Z ##[endgroup]
2025-06-15T16:16:54.0568089Z ##[group]Operating System
2025-06-15T16:16:54.0568631Z Ubuntu
2025-06-15T16:16:54.0569172Z 24.04.2
2025-06-15T16:16:54.0569627Z LTS
2025-06-15T16:16:54.0570120Z ##[endgroup]
2025-06-15T16:16:54.0570655Z ##[group]Runner Image
2025-06-15T16:16:54.0571182Z Image: ubuntu-24.04
2025-06-15T16:16:54.0571676Z Version: 20250602.3.0
2025-06-15T16:16:54.0572705Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250602.3/images/ubuntu/Ubuntu2404-Readme.md
2025-06-15T16:16:54.0574216Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250602.3
2025-06-15T16:16:54.0575209Z ##[endgroup]
2025-06-15T16:16:54.0577541Z ##[group]GITHUB_TOKEN Permissions
2025-06-15T16:16:54.0580208Z Actions: write
2025-06-15T16:16:54.0580768Z Attestations: write
2025-06-15T16:16:54.0581237Z Checks: write
2025-06-15T16:16:54.0581810Z Contents: write
2025-06-15T16:16:54.0582266Z Deployments: write
2025-06-15T16:16:54.0582766Z Discussions: write
2025-06-15T16:16:54.0583304Z Issues: write
2025-06-15T16:16:54.0583796Z Metadata: read
2025-06-15T16:16:54.0584240Z Models: read
2025-06-15T16:16:54.0584748Z Packages: write
2025-06-15T16:16:54.0585260Z Pages: write
2025-06-15T16:16:54.0585717Z PullRequests: write
2025-06-15T16:16:54.0586304Z RepositoryProjects: write
2025-06-15T16:16:54.0586829Z SecurityEvents: write
2025-06-15T16:16:54.0587432Z Statuses: write
2025-06-15T16:16:54.0588180Z ##[endgroup]
2025-06-15T16:16:54.0590490Z Secret source: Actions
2025-06-15T16:16:54.0591521Z Prepare workflow directory
2025-06-15T16:16:54.1127358Z Prepare all required actions
2025-06-15T16:16:54.1164632Z Getting action download info
2025-06-15T16:16:54.4614023Z ##[group]Download immutable action package 'actions/checkout@v4'
2025-06-15T16:16:54.4615205Z Version: 4.2.2
2025-06-15T16:16:54.4616220Z Digest: sha256:ccb2698953eaebd21c7bf6268a94f9c26518a7e38e27e0b83c1fe1ad049819b1
2025-06-15T16:16:54.4617333Z Source commit SHA: 11bd71901bbe5b1630ceea73d27597364c9af683
2025-06-15T16:16:54.4618316Z ##[endgroup]
2025-06-15T16:16:54.5480441Z ##[group]Download immutable action package 'actions/setup-node@v4'
2025-06-15T16:16:54.5481694Z Version: 4.4.0
2025-06-15T16:16:54.5483130Z Digest: sha256:9427cefe82346e992fb5b949e3569b39d537ae41aa3086483b14eceebfc16bc1
2025-06-15T16:16:54.5484832Z Source commit SHA: 49933ea5288caeca8642d1e84afbd3f7d6820020
2025-06-15T16:16:54.5486094Z ##[endgroup]
2025-06-15T16:16:54.7432939Z Complete job name: Core Tests (18)
2025-06-15T16:16:54.8027304Z ##[group]Run actions/checkout@v4
2025-06-15T16:16:54.8028323Z with:
2025-06-15T16:16:54.8028728Z   repository: gmoon/s3proxy
2025-06-15T16:16:54.8029314Z   token: ***
2025-06-15T16:16:54.8029710Z   ssh-strict: true
2025-06-15T16:16:54.8030091Z   ssh-user: git
2025-06-15T16:16:54.8030488Z   persist-credentials: true
2025-06-15T16:16:54.8030914Z   clean: true
2025-06-15T16:16:54.8031305Z   sparse-checkout-cone-mode: true
2025-06-15T16:16:54.8031759Z   fetch-depth: 1
2025-06-15T16:16:54.8032130Z   fetch-tags: false
2025-06-15T16:16:54.8032508Z   show-progress: true
2025-06-15T16:16:54.8032895Z   lfs: false
2025-06-15T16:16:54.8033257Z   submodules: false
2025-06-15T16:16:54.8033642Z   set-safe-directory: true
2025-06-15T16:16:54.8034245Z env:
2025-06-15T16:16:54.8034603Z   AWS_REGION: us-east-1
2025-06-15T16:16:54.8035009Z ##[endgroup]
2025-06-15T16:16:54.9084349Z Syncing repository: gmoon/s3proxy
2025-06-15T16:16:54.9085972Z ##[group]Getting Git version info
2025-06-15T16:16:54.9086752Z Working directory is '/home/runner/work/s3proxy/s3proxy'
2025-06-15T16:16:54.9087944Z [command]/usr/bin/git version
2025-06-15T16:16:54.9124428Z git version 2.49.0
2025-06-15T16:16:54.9149919Z ##[endgroup]
2025-06-15T16:16:54.9163518Z Temporarily overriding HOME='/home/runner/work/_temp/0c69889c-f82d-4e09-b8d8-aa083db1b078' before making global git config changes
2025-06-15T16:16:54.9164848Z Adding repository directory to the temporary git global config as a safe directory
2025-06-15T16:16:54.9174764Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/s3proxy/s3proxy
2025-06-15T16:16:54.9207074Z Deleting the contents of '/home/runner/work/s3proxy/s3proxy'
2025-06-15T16:16:54.9210800Z ##[group]Initializing the repository
2025-06-15T16:16:54.9214525Z [command]/usr/bin/git init /home/runner/work/s3proxy/s3proxy
2025-06-15T16:16:54.9276514Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-06-15T16:16:54.9278270Z hint: is subject to change. To configure the initial branch name to use in all
2025-06-15T16:16:54.9279854Z hint: of your new repositories, which will suppress this warning, call:
2025-06-15T16:16:54.9280969Z hint:
2025-06-15T16:16:54.9281705Z hint: 	git config --global init.defaultBranch <name>
2025-06-15T16:16:54.9282610Z hint:
2025-06-15T16:16:54.9283372Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-06-15T16:16:54.9284238Z hint: 'development'. The just-created branch can be renamed via this command:
2025-06-15T16:16:54.9284922Z hint:
2025-06-15T16:16:54.9285301Z hint: 	git branch -m <name>
2025-06-15T16:16:54.9285976Z Initialized empty Git repository in /home/runner/work/s3proxy/s3proxy/.git/
2025-06-15T16:16:54.9292841Z [command]/usr/bin/git remote add origin https://github.com/gmoon/s3proxy
2025-06-15T16:16:54.9323340Z ##[endgroup]
2025-06-15T16:16:54.9324033Z ##[group]Disabling automatic garbage collection
2025-06-15T16:16:54.9327154Z [command]/usr/bin/git config --local gc.auto 0
2025-06-15T16:16:54.9354973Z ##[endgroup]
2025-06-15T16:16:54.9355611Z ##[group]Setting up auth
2025-06-15T16:16:54.9361624Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-06-15T16:16:54.9390624Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-06-15T16:16:54.9648969Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-06-15T16:16:54.9678811Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-06-15T16:16:54.9894922Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-06-15T16:16:54.9935313Z ##[endgroup]
2025-06-15T16:16:54.9936515Z ##[group]Fetching the repository
2025-06-15T16:16:54.9946004Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +9fa3ac03bc100b6a3073dc86e6c95e487d6711ed:refs/remotes/origin/typescript-migration
2025-06-15T16:16:55.3482674Z From https://github.com/gmoon/s3proxy
2025-06-15T16:16:55.3484081Z  * [new ref]         9fa3ac03bc100b6a3073dc86e6c95e487d6711ed -> origin/typescript-migration
2025-06-15T16:16:55.3507488Z ##[endgroup]
2025-06-15T16:16:55.3508949Z ##[group]Determining the checkout info
2025-06-15T16:16:55.3510353Z ##[endgroup]
2025-06-15T16:16:55.3514935Z [command]/usr/bin/git sparse-checkout disable
2025-06-15T16:16:55.3552513Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-06-15T16:16:55.3579703Z ##[group]Checking out the ref
2025-06-15T16:16:55.3582953Z [command]/usr/bin/git checkout --progress --force -B typescript-migration refs/remotes/origin/typescript-migration
2025-06-15T16:16:55.3721233Z Switched to a new branch 'typescript-migration'
2025-06-15T16:16:55.3722990Z branch 'typescript-migration' set up to track 'origin/typescript-migration'.
2025-06-15T16:16:55.3725454Z ##[endgroup]
2025-06-15T16:16:55.3758974Z [command]/usr/bin/git log -1 --format=%H
2025-06-15T16:16:55.3783406Z 9fa3ac03bc100b6a3073dc86e6c95e487d6711ed
2025-06-15T16:16:55.4035618Z ##[group]Run actions/setup-node@v4
2025-06-15T16:16:55.4036245Z with:
2025-06-15T16:16:55.4036615Z   node-version: 18
2025-06-15T16:16:55.4037028Z   cache: npm
2025-06-15T16:16:55.4037412Z   always-auth: false
2025-06-15T16:16:55.4038088Z   check-latest: false
2025-06-15T16:16:55.4038700Z   token: ***
2025-06-15T16:16:55.4039077Z env:
2025-06-15T16:16:55.4039433Z   AWS_REGION: us-east-1
2025-06-15T16:16:55.4039891Z ##[endgroup]
2025-06-15T16:16:55.7434304Z Found in cache @ /opt/hostedtoolcache/node/18.20.8/x64
2025-06-15T16:16:55.7440450Z ##[group]Environment details
2025-06-15T16:16:57.4348722Z node: v18.20.8
2025-06-15T16:16:57.4349572Z npm: 10.8.2
2025-06-15T16:16:57.4350726Z yarn: 1.22.22
2025-06-15T16:16:57.4351956Z ##[endgroup]
2025-06-15T16:16:57.4376150Z [command]/opt/hostedtoolcache/node/18.20.8/x64/bin/npm config get cache
2025-06-15T16:16:57.7086794Z /home/runner/.npm
2025-06-15T16:16:57.8190784Z Cache hit for: node-cache-Linux-x64-npm-9f97a95d6ec748a148b25b55d1e0a7ad34067c37dcda717b162d34bfca6d2937
2025-06-15T16:16:58.5092238Z Received 116122266 of 116122266 (100.0%), 182.1 MBs/sec
2025-06-15T16:16:58.5094907Z Cache Size: ~111 MB (116122266 B)
2025-06-15T16:16:58.5150356Z [command]/usr/bin/tar -xf /home/runner/work/_temp/09289379-16b4-4235-a63c-3417781d6dda/cache.tzst -P -C /home/runner/work/s3proxy/s3proxy --use-compress-program unzstd
2025-06-15T16:16:58.9011753Z Cache restored successfully
2025-06-15T16:16:58.9246259Z Cache restored from key: node-cache-Linux-x64-npm-9f97a95d6ec748a148b25b55d1e0a7ad34067c37dcda717b162d34bfca6d2937
2025-06-15T16:16:58.9420057Z ##[group]Run npm ci
2025-06-15T16:16:58.9420372Z [36;1mnpm ci[0m
2025-06-15T16:16:58.9525774Z shell: /usr/bin/bash -e {0}
2025-06-15T16:16:58.9526038Z env:
2025-06-15T16:16:58.9526212Z   AWS_REGION: us-east-1
2025-06-15T16:16:58.9526419Z ##[endgroup]
2025-06-15T16:17:02.1396651Z npm warn EBADENGINE Unsupported engine {
2025-06-15T16:17:02.1398053Z npm warn EBADENGINE   package: '@semantic-release/commit-analyzer@13.0.1',
2025-06-15T16:17:02.1398915Z npm warn EBADENGINE   required: { node: '>=20.8.1' },
2025-06-15T16:17:02.1399704Z npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
2025-06-15T16:17:02.1400300Z npm warn EBADENGINE }
2025-06-15T16:17:02.1400807Z npm warn EBADENGINE Unsupported engine {
2025-06-15T16:17:02.1401307Z npm warn EBADENGINE   package: '@semantic-release/github@11.0.3',
2025-06-15T16:17:02.1401785Z npm warn EBADENGINE   required: { node: '>=20.8.1' },
2025-06-15T16:17:02.1402329Z npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
2025-06-15T16:17:02.1402704Z npm warn EBADENGINE }
2025-06-15T16:17:02.1403064Z npm warn EBADENGINE Unsupported engine {
2025-06-15T16:17:02.1403779Z npm warn EBADENGINE   package: '@octokit/auth-token@6.0.0',
2025-06-15T16:17:02.1404484Z npm warn EBADENGINE   required: { node: '>= 20' },
2025-06-15T16:17:02.1405228Z npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
2025-06-15T16:17:02.1405810Z npm warn EBADENGINE }
2025-06-15T16:17:02.1406305Z npm warn EBADENGINE Unsupported engine {
2025-06-15T16:17:02.1406933Z npm warn EBADENGINE   package: '@octokit/core@7.0.2',
2025-06-15T16:17:02.1407722Z npm warn EBADENGINE   required: { node: '>= 20' },
2025-06-15T16:17:02.1408470Z npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
2025-06-15T16:17:02.1409046Z npm warn EBADENGINE }
2025-06-15T16:17:02.1409506Z npm warn EBADENGINE Unsupported engine {
2025-06-15T16:17:02.1410158Z npm warn EBADENGINE   package: '@octokit/endpoint@11.0.0',
2025-06-15T16:17:02.1410833Z npm warn EBADENGINE   required: { node: '>= 20' },
2025-06-15T16:17:02.1411542Z npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
2025-06-15T16:17:02.1412095Z npm warn EBADENGINE }
2025-06-15T16:17:02.1412567Z npm warn EBADENGINE Unsupported engine {
2025-06-15T16:17:02.1413236Z npm warn EBADENGINE   package: '@octokit/graphql@9.0.1',
2025-06-15T16:17:02.1414220Z npm warn EBADENGINE   required: { node: '>= 20' },
2025-06-15T16:17:02.1414950Z npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
2025-06-15T16:17:02.1415530Z npm warn EBADENGINE }
2025-06-15T16:17:02.1416010Z npm warn EBADENGINE Unsupported engine {
2025-06-15T16:17:02.1416748Z npm warn EBADENGINE   package: '@octokit/plugin-paginate-rest@13.0.1',
2025-06-15T16:17:02.1417484Z npm warn EBADENGINE   required: { node: '>= 20' },
2025-06-15T16:17:02.1418366Z npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
2025-06-15T16:17:02.1418917Z npm warn EBADENGINE }
2025-06-15T16:17:02.1419373Z npm warn EBADENGINE Unsupported engine {
2025-06-15T16:17:02.1420066Z npm warn EBADENGINE   package: '@octokit/plugin-retry@8.0.1',
2025-06-15T16:17:02.1420749Z npm warn EBADENGINE   required: { node: '>= 20' },
2025-06-15T16:17:02.1421459Z npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
2025-06-15T16:17:02.1422003Z npm warn EBADENGINE }
2025-06-15T16:17:02.1422447Z npm warn EBADENGINE Unsupported engine {
2025-06-15T16:17:02.1423124Z npm warn EBADENGINE   package: '@octokit/plugin-throttling@11.0.1',
2025-06-15T16:17:02.1423839Z npm warn EBADENGINE   required: { node: '>= 20' },
2025-06-15T16:17:02.1424287Z npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
2025-06-15T16:17:02.1424619Z npm warn EBADENGINE }
2025-06-15T16:17:02.1424882Z npm warn EBADENGINE Unsupported engine {
2025-06-15T16:17:02.1425259Z npm warn EBADENGINE   package: '@octokit/request@10.0.2',
2025-06-15T16:17:02.1425641Z npm warn EBADENGINE   required: { node: '>= 20' },
2025-06-15T16:17:02.1426442Z npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
2025-06-15T16:17:02.1426990Z npm warn EBADENGINE }
2025-06-15T16:17:02.1427282Z npm warn EBADENGINE Unsupported engine {
2025-06-15T16:17:02.1427914Z npm warn EBADENGINE   package: '@octokit/request-error@7.0.0',
2025-06-15T16:17:02.1428336Z npm warn EBADENGINE   required: { node: '>= 20' },
2025-06-15T16:17:02.1428738Z npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
2025-06-15T16:17:02.1429066Z npm warn EBADENGINE }
2025-06-15T16:17:02.1429323Z npm warn EBADENGINE Unsupported engine {
2025-06-15T16:17:02.1429710Z npm warn EBADENGINE   package: '@semantic-release/npm@12.0.1',
2025-06-15T16:17:02.1430440Z npm warn EBADENGINE   required: { node: '>=20.8.1' },
2025-06-15T16:17:02.1431235Z npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
2025-06-15T16:17:02.1431840Z npm warn EBADENGINE }
2025-06-15T16:17:02.1432342Z npm warn EBADENGINE Unsupported engine {
2025-06-15T16:17:02.1433273Z npm warn EBADENGINE   package: '@semantic-release/release-notes-generator@14.0.3',
2025-06-15T16:17:02.1434174Z npm warn EBADENGINE   required: { node: '>=20.8.1' },
2025-06-15T16:17:02.1434987Z npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
2025-06-15T16:17:02.1435601Z npm warn EBADENGINE }
2025-06-15T16:17:02.1448889Z npm warn EBADENGINE Unsupported engine {
2025-06-15T16:17:02.1450915Z npm warn EBADENGINE   package: 'artillery@2.0.22',
2025-06-15T16:17:02.1451707Z npm warn EBADENGINE   required: { node: '>= 22.13.0' },
2025-06-15T16:17:02.1452580Z npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
2025-06-15T16:17:02.1453228Z npm warn EBADENGINE }
2025-06-15T16:17:02.1517396Z npm warn EBADENGINE Unsupported engine {
2025-06-15T16:17:02.1519208Z npm warn EBADENGINE   package: 'semantic-release@24.2.5',
2025-06-15T16:17:02.1521120Z npm warn EBADENGINE   required: { node: '>=20.8.1' },
2025-06-15T16:17:02.1521965Z npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
2025-06-15T16:17:02.1522608Z npm warn EBADENGINE }
2025-06-15T16:17:08.0324604Z npm warn deprecated inflight@1.0.6: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.
2025-06-15T16:17:08.1084326Z npm warn deprecated read-package-json@6.0.4: This package is no longer supported. Please use @npmcli/package-json instead.
2025-06-15T16:17:08.1175126Z npm warn deprecated lodash.get@4.4.2: This package is deprecated. Use the optional chaining (?.) operator instead.
2025-06-15T16:17:08.1569799Z npm warn deprecated @npmcli/move-file@2.0.1: This functionality has been moved to @npmcli/fs
2025-06-15T16:17:08.1868254Z npm warn deprecated read-package-json@7.0.1: This package is no longer supported. Please use @npmcli/package-json instead.
2025-06-15T16:17:08.2155820Z npm warn deprecated npmlog@6.0.2: This package is no longer supported.
2025-06-15T16:17:08.2679503Z npm warn deprecated rimraf@2.6.3: Rimraf versions prior to v4 are no longer supported
2025-06-15T16:17:08.3409083Z npm warn deprecated @humanwhocodes/config-array@0.13.0: Use @eslint/config-array instead
2025-06-15T16:17:08.3864662Z npm warn deprecated rimraf@3.0.2: Rimraf versions prior to v4 are no longer supported
2025-06-15T16:17:08.5229171Z npm warn deprecated are-we-there-yet@3.0.1: This package is no longer supported.
2025-06-15T16:17:08.5564863Z npm warn deprecated glob@7.2.3: Glob versions prior to v9 are no longer supported
2025-06-15T16:17:08.5729909Z npm warn deprecated @humanwhocodes/object-schema@2.0.3: Use @eslint/object-schema instead
2025-06-15T16:17:08.5788153Z npm warn deprecated glob@8.1.0: Glob versions prior to v9 are no longer supported
2025-06-15T16:17:08.5800735Z npm warn deprecated glob@8.1.0: Glob versions prior to v9 are no longer supported
2025-06-15T16:17:08.6589290Z npm warn deprecated q@1.5.1: You or someone you depend on is using Q, the JavaScript Promise library that gave JavaScript developers strong feelings about promises. They can almost certainly migrate to the native JavaScript promise now. Thank you literally everyone for joining me in this bet against the odds. Be excellent to each other.
2025-06-15T16:17:08.6590666Z npm warn deprecated
2025-06-15T16:17:08.6591168Z npm warn deprecated (For a CapTP with native promises, see @endo/eventual-send and @endo/captp)
2025-06-15T16:17:08.8793964Z npm warn deprecated querystring@0.2.0: The querystring API is considered Legacy. new code should use the URLSearchParams API instead.
2025-06-15T16:17:09.1773367Z npm warn deprecated gauge@4.0.4: This package is no longer supported.
2025-06-15T16:17:09.1980288Z npm warn deprecated uuid@3.4.0: Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.
2025-06-15T16:17:14.4521067Z npm warn deprecated eslint@8.57.1: This version is no longer supported. Please see https://eslint.org/version-support for other options.
2025-06-15T16:17:24.9823179Z 
2025-06-15T16:17:24.9824022Z added 2039 packages, and audited 2255 packages in 26s
2025-06-15T16:17:24.9824477Z 
2025-06-15T16:17:24.9824757Z 389 packages are looking for funding
2025-06-15T16:17:24.9825227Z   run `npm fund` for details
2025-06-15T16:17:25.0037400Z 
2025-06-15T16:17:25.0038193Z 13 vulnerabilities (2 low, 9 moderate, 2 high)
2025-06-15T16:17:25.0038607Z 
2025-06-15T16:17:25.0038892Z To address all issues, run:
2025-06-15T16:17:25.0039328Z   npm audit fix
2025-06-15T16:17:25.0039550Z 
2025-06-15T16:17:25.0039751Z Run `npm audit` for details.
2025-06-15T16:17:25.0983252Z ##[group]Run npm run lint || echo "Linting warnings are acceptable"
2025-06-15T16:17:25.0983707Z [36;1mnpm run lint || echo "Linting warnings are acceptable"[0m
2025-06-15T16:17:25.1047238Z shell: /usr/bin/bash -e {0}
2025-06-15T16:17:25.1047470Z env:
2025-06-15T16:17:25.1047775Z   AWS_REGION: us-east-1
2025-06-15T16:17:25.1047968Z ##[endgroup]
2025-06-15T16:17:25.2339815Z 
2025-06-15T16:17:25.2340199Z > s3proxy@3.0.0 lint
2025-06-15T16:17:25.2340856Z > biome check src examples test
2025-06-15T16:17:25.2341170Z 
2025-06-15T16:17:25.2916830Z src/types.ts:29:43 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.2917431Z 
2025-06-15T16:17:25.2917953Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.2919032Z   
2025-06-15T16:17:25.2919718Z     27 │ export interface ExpressResponse extends ServerResponse {
2025-06-15T16:17:25.2920479Z     28 │   // Use any to avoid complex type conflicts
2025-06-15T16:17:25.2921310Z   > 29 │   writeHead(statusCode: number, headers?: any): this;
2025-06-15T16:17:25.2921970Z        │                                           ^^^
2025-06-15T16:17:25.2922409Z     30 │ }
2025-06-15T16:17:25.2922724Z     31 │ 
2025-06-15T16:17:25.2922983Z   
2025-06-15T16:17:25.2923491Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.2924035Z   
2025-06-15T16:17:25.2924191Z 
2025-06-15T16:17:25.2925027Z test/s3proxy.test.ts:51:30 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.2925659Z 
2025-06-15T16:17:25.2925889Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.2926311Z   
2025-06-15T16:17:25.2926696Z     49 │       await proxy.init();
2025-06-15T16:17:25.2927775Z     50 │       // Test that proxy is properly initialized by calling a method that requires initialization
2025-06-15T16:17:25.2928807Z   > 51 │       expect(() => (proxy as any).isInitialized()).not.toThrow();
2025-06-15T16:17:25.2929469Z        │                              ^^^
2025-06-15T16:17:25.2929890Z     52 │     });
2025-06-15T16:17:25.2930224Z     53 │ 
2025-06-15T16:17:25.2930479Z   
2025-06-15T16:17:25.2930990Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.2931478Z   
2025-06-15T16:17:25.2931619Z 
2025-06-15T16:17:25.2932468Z test/s3proxy.test.ts:81:38 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.2933079Z 
2025-06-15T16:17:25.2933300Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.2933717Z   
2025-06-15T16:17:25.2934336Z     79 │       // The S3Proxy catches NoSuchKey errors and returns an empty stream
2025-06-15T16:17:25.2935333Z     80 │       // This is the expected behavior - it doesn't throw, it handles the error gracefully
2025-06-15T16:17:25.2936318Z   > 81 │       const result = await (proxy as any).getObject(mockReq);
2025-06-15T16:17:25.2936936Z        │                                      ^^^
2025-06-15T16:17:25.2937556Z     82 │       expect(result.s3stream).toBeDefined();
2025-06-15T16:17:25.2938453Z     83 │       expect(typeof result.s3stream.pipe).toBe('function');
2025-06-15T16:17:25.2938940Z   
2025-06-15T16:17:25.2939414Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.2939907Z   
2025-06-15T16:17:25.2940047Z 
2025-06-15T16:17:25.2940919Z test/s3proxy.test.ts:95:38 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.2941355Z 
2025-06-15T16:17:25.2941499Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.2941733Z   
2025-06-15T16:17:25.2942037Z     94 │       // Empty path should also be handled gracefully
2025-06-15T16:17:25.2942476Z   > 95 │       const result = await (proxy as any).getObject(mockReq);
2025-06-15T16:17:25.2942864Z        │                                      ^^^
2025-06-15T16:17:25.2943206Z     96 │       expect(result.s3stream).toBeDefined();
2025-06-15T16:17:25.2943976Z     97 │       expect(typeof result.s3stream.pipe).toBe('function');
2025-06-15T16:17:25.2944530Z   
2025-06-15T16:17:25.2945059Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.2945555Z   
2025-06-15T16:17:25.2945699Z 
2025-06-15T16:17:25.2946577Z test/s3proxy.test.ts:103:15 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.2947206Z 
2025-06-15T16:17:25.2947426Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.2948058Z   
2025-06-15T16:17:25.2948472Z     101 │   describe('getObject', () => {
2025-06-15T16:17:25.2949193Z     102 │     const proxy = new S3Proxy({ bucket: 's3proxy-public' });
2025-06-15T16:17:25.2949805Z   > 103 │     let page: any;
2025-06-15T16:17:25.2950190Z         │               ^^^
2025-06-15T16:17:25.2950884Z     104 │     let content: string;
2025-06-15T16:17:25.2951291Z     105 │ 
2025-06-15T16:17:25.2951554Z   
2025-06-15T16:17:25.2952060Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.2952598Z   
2025-06-15T16:17:25.2952736Z 
2025-06-15T16:17:25.2953582Z test/s3proxy.test.ts:115:30 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.2954227Z 
2025-06-15T16:17:25.2954460Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.2954825Z   
2025-06-15T16:17:25.2955247Z     113 │       } as ExpressRequest;
2025-06-15T16:17:25.2955664Z     114 │ 
2025-06-15T16:17:25.2956182Z   > 115 │       page = await (proxy as any).getObject(mockReq);
2025-06-15T16:17:25.2956790Z         │                              ^^^
2025-06-15T16:17:25.2957205Z     116 │ 
2025-06-15T16:17:25.2957870Z     117 │       // Read the stream content for testing
2025-06-15T16:17:25.2958297Z   
2025-06-15T16:17:25.2958799Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.2959471Z   
2025-06-15T16:17:25.2959605Z 
2025-06-15T16:17:25.2960519Z test/s3proxy.test.ts:166:38 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.2961210Z 
2025-06-15T16:17:25.2961463Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.2961891Z   
2025-06-15T16:17:25.2962293Z     164 │       } as ExpressRequest;
2025-06-15T16:17:25.2962739Z     165 │ 
2025-06-15T16:17:25.2963293Z   > 166 │       const result = await (proxy as any).getObject(mockReq);
2025-06-15T16:17:25.2963969Z         │                                      ^^^
2025-06-15T16:17:25.2964420Z     167 │ 
2025-06-15T16:17:25.2964947Z     168 │       // Range requests should return a readable stream
2025-06-15T16:17:25.2965395Z   
2025-06-15T16:17:25.2965677Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.2965975Z   
2025-06-15T16:17:25.2966056Z 
2025-06-15T16:17:25.2966548Z test/s3proxy.test.ts:197:38 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.2966891Z 
2025-06-15T16:17:25.2967022Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.2967260Z   
2025-06-15T16:17:25.2967474Z     195 │       } as ExpressRequest;
2025-06-15T16:17:25.2967945Z     196 │ 
2025-06-15T16:17:25.2968293Z   > 197 │       const result = await (proxy as any).headObject(mockReq);
2025-06-15T16:17:25.2968682Z         │                                      ^^^
2025-06-15T16:17:25.2968938Z     198 │ 
2025-06-15T16:17:25.2969219Z     199 │       expect(result.statusCode).toBe(200);
2025-06-15T16:17:25.2969475Z   
2025-06-15T16:17:25.2969747Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.2970048Z   
2025-06-15T16:17:25.2970130Z 
2025-06-15T16:17:25.2970590Z test/s3proxy.test.ts:213:38 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.2970929Z 
2025-06-15T16:17:25.2971075Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.2971313Z   
2025-06-15T16:17:25.2971574Z     212 │       // Should handle gracefully, not throw
2025-06-15T16:17:25.2972166Z   > 213 │       const result = await (proxy as any).headObject(mockReq);
2025-06-15T16:17:25.2972558Z         │                                      ^^^
2025-06-15T16:17:25.2972903Z     214 │       expect(result.s3stream).toBeDefined();
2025-06-15T16:17:25.2973184Z     215 │     });
2025-06-15T16:17:25.2973344Z   
2025-06-15T16:17:25.2973618Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.2973914Z   
2025-06-15T16:17:25.2973992Z 
2025-06-15T16:17:25.2974460Z test/s3proxy.test.ts:226:38 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.2974800Z 
2025-06-15T16:17:25.2974925Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.2975161Z   
2025-06-15T16:17:25.2975488Z     225 │     it('should perform health check successfully', async () => {
2025-06-15T16:17:25.2976072Z   > 226 │       const result = await (proxy as any).headBucket();
2025-06-15T16:17:25.2976424Z         │                                      ^^^
2025-06-15T16:17:25.2976679Z     227 │ 
2025-06-15T16:17:25.2976948Z     228 │       expect(result.statusCode).toBe(200);
2025-06-15T16:17:25.2977189Z   
2025-06-15T16:17:25.2977458Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.2977908Z   
2025-06-15T16:17:25.2977993Z 
2025-06-15T16:17:25.2978448Z src/index.ts:164:31 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.2978776Z 
2025-06-15T16:17:25.2978907Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.2979152Z   
2025-06-15T16:17:25.2980773Z     162 │    * 3. return { s3stream, statusCode, headers }
2025-06-15T16:17:25.2981358Z     163 │    */
2025-06-15T16:17:25.2982022Z   > 164 │   private async send(command: any): Promise<S3ProxyResponse> {
2025-06-15T16:17:25.2982734Z         │                               ^^^
2025-06-15T16:17:25.2983284Z     165 │     this.isInitialized();
2025-06-15T16:17:25.2983894Z     166 │     let headers: Record<string, string> = {};
2025-06-15T16:17:25.2984372Z   
2025-06-15T16:17:25.2984872Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.2985424Z   
2025-06-15T16:17:25.2985566Z 
2025-06-15T16:17:25.2986418Z src/index.ts:172:14 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.2987018Z 
2025-06-15T16:17:25.2987252Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.2987824Z   
2025-06-15T16:17:25.2988342Z     170 │     // Add middleware to capture response metadata
2025-06-15T16:17:25.2988988Z     171 │     command.middlewareStack.add(
2025-06-15T16:17:25.2989628Z   > 172 │       (next: any) => async (args: any) => {
2025-06-15T16:17:25.2990126Z         │              ^^^
2025-06-15T16:17:25.2990663Z     173 │         const result = await next(args);
2025-06-15T16:17:25.2991366Z     174 │         headers = result.response.headers || {};
2025-06-15T16:17:25.2991824Z   
2025-06-15T16:17:25.2992523Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.2993069Z   
2025-06-15T16:17:25.2993219Z 
2025-06-15T16:17:25.2994079Z src/index.ts:172:35 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.2994687Z 
2025-06-15T16:17:25.2994915Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.2995341Z   
2025-06-15T16:17:25.2995829Z     170 │     // Add middleware to capture response metadata
2025-06-15T16:17:25.2996467Z     171 │     command.middlewareStack.add(
2025-06-15T16:17:25.2997091Z   > 172 │       (next: any) => async (args: any) => {
2025-06-15T16:17:25.2997831Z         │                                   ^^^
2025-06-15T16:17:25.2998445Z     173 │         const result = await next(args);
2025-06-15T16:17:25.2999292Z     174 │         headers = result.response.headers || {};
2025-06-15T16:17:25.2999745Z   
2025-06-15T16:17:25.3000251Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.3000800Z   
2025-06-15T16:17:25.3000961Z 
2025-06-15T16:17:25.3001800Z src/index.ts:205:37 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.3002411Z 
2025-06-15T16:17:25.3002632Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.3003059Z   
2025-06-15T16:17:25.3003455Z     203 │    * on node, only browser.
2025-06-15T16:17:25.3003882Z     204 │    */
2025-06-15T16:17:25.3004442Z   > 205 │   public static getReadstream(body: any): Readable {
2025-06-15T16:17:25.3005071Z         │                                     ^^^
2025-06-15T16:17:25.3005611Z     206 │     if (body === undefined) {
2025-06-15T16:17:25.3006232Z     207 │       return S3Proxy.createEmptyReadstream();
2025-06-15T16:17:25.3006675Z   
2025-06-15T16:17:25.3007156Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.3007880Z   
2025-06-15T16:17:25.3008024Z 
2025-06-15T16:17:25.3008910Z src/index.ts:258:13 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.3009505Z 
2025-06-15T16:17:25.3009731Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.3010161Z   
2025-06-15T16:17:25.3010864Z     256 │   public async healthCheckStream(res: ExpressResponse): Promise<Readable> {
2025-06-15T16:17:25.3011895Z     257 │     const { s3stream, statusCode, headers } = await this.headBucket();
2025-06-15T16:17:25.3012709Z   > 258 │     (res as any).writeHead(statusCode, headers);
2025-06-15T16:17:25.3013230Z         │             ^^^
2025-06-15T16:17:25.3013717Z     259 │     return s3stream as Readable;
2025-06-15T16:17:25.3014162Z     260 │   }
2025-06-15T16:17:25.3014424Z   
2025-06-15T16:17:25.3014906Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.3015455Z   
2025-06-15T16:17:25.3015600Z 
2025-06-15T16:17:25.3016416Z src/index.ts:264:13 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.3017027Z 
2025-06-15T16:17:25.3017268Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.3017846Z   
2025-06-15T16:17:25.3018546Z     262 │   public async head(req: ExpressRequest, res: ExpressResponse): Promise<Readable> {
2025-06-15T16:17:25.3019179Z     263 │     const { s3stream, statusCode, headers } = await this.headObject(req);
2025-06-15T16:17:25.3019639Z   > 264 │     (res as any).writeHead(statusCode, headers);
2025-06-15T16:17:25.3019940Z         │             ^^^
2025-06-15T16:17:25.3020218Z     265 │     return s3stream as Readable;
2025-06-15T16:17:25.3020475Z     266 │   }
2025-06-15T16:17:25.3020624Z   
2025-06-15T16:17:25.3020898Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.3021194Z   
2025-06-15T16:17:25.3021272Z 
2025-06-15T16:17:25.3021742Z src/index.ts:270:13 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.3022077Z 
2025-06-15T16:17:25.3022207Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.3022611Z   
2025-06-15T16:17:25.3023054Z     268 │   public async get(req: ExpressRequest, res: ExpressResponse): Promise<Readable> {
2025-06-15T16:17:25.3023635Z     269 │     const { s3stream, statusCode, headers } = await this.getObject(req);
2025-06-15T16:17:25.3024084Z   > 270 │     (res as any).writeHead(statusCode, headers);
2025-06-15T16:17:25.3024373Z         │             ^^^
2025-06-15T16:17:25.3024648Z     271 │     return s3stream as Readable;
2025-06-15T16:17:25.3024900Z     272 │   }
2025-06-15T16:17:25.3025054Z   
2025-06-15T16:17:25.3025325Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.3025624Z   
2025-06-15T16:17:25.3025712Z 
2025-06-15T16:17:25.3026183Z test/helpers/aws-mock.ts:178:38 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.3026717Z 
2025-06-15T16:17:25.3026859Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.3027107Z   
2025-06-15T16:17:25.3027465Z     176 │  * Helper to set up specific mock scenarios for individual tests
2025-06-15T16:17:25.3028104Z     177 │  */
2025-06-15T16:17:25.3028469Z   > 178 │ export function mockS3Error(command: any, error: any) {
2025-06-15T16:17:25.3028848Z         │                                      ^^^
2025-06-15T16:17:25.3029181Z     179 │   s3Mock.on(command).rejects(error);
2025-06-15T16:17:25.3029442Z     180 │ }
2025-06-15T16:17:25.3029594Z   
2025-06-15T16:17:25.3029879Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.3030176Z   
2025-06-15T16:17:25.3030262Z 
2025-06-15T16:17:25.3030728Z test/helpers/aws-mock.ts:178:50 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.3031085Z 
2025-06-15T16:17:25.3031212Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.3031463Z   
2025-06-15T16:17:25.3031779Z     176 │  * Helper to set up specific mock scenarios for individual tests
2025-06-15T16:17:25.3032110Z     177 │  */
2025-06-15T16:17:25.3032444Z   > 178 │ export function mockS3Error(command: any, error: any) {
2025-06-15T16:17:25.3032835Z         │                                                  ^^^
2025-06-15T16:17:25.3033334Z     179 │   s3Mock.on(command).rejects(error);
2025-06-15T16:17:25.3033784Z     180 │ }
2025-06-15T16:17:25.3034026Z   
2025-06-15T16:17:25.3034478Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.3034980Z   
2025-06-15T16:17:25.3035112Z 
2025-06-15T16:17:25.3035917Z test/parseRequest.test.ts:63:32 lint/suspicious/noExplicitAny ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2025-06-15T16:17:25.3036540Z 
2025-06-15T16:17:25.3036762Z   ! Unexpected any. Specify a different type.
2025-06-15T16:17:25.3037185Z   
2025-06-15T16:17:25.3037835Z     61 │   it('should set Bucket and Key', () => {
2025-06-15T16:17:25.3038659Z     62 │     const s3proxy = new S3Proxy({ bucket: 's3proxy-public' });
2025-06-15T16:17:25.3039725Z   > 63 │     const result = (s3proxy as any).getS3Params({ path: '/index.html' } as ExpressRequest);
2025-06-15T16:17:25.3040582Z        │                                ^^^
2025-06-15T16:17:25.3041447Z     64 │     expect(result).toEqual({ Bucket: 's3proxy-public', Key: 'index.html' });
2025-06-15T16:17:25.3042198Z     65 │   });
2025-06-15T16:17:25.3042509Z   
2025-06-15T16:17:25.3043078Z   i any disables many type checking rules. Its use should be avoided.
2025-06-15T16:17:25.3043637Z   
2025-06-15T16:17:25.3043789Z 
2025-06-15T16:17:25.3044241Z The number of diagnostics exceeds the number allowed by Biome.
2025-06-15T16:17:25.3044864Z Diagnostics not shown: 1.
2025-06-15T16:17:25.3045409Z Checked 18 files in 18ms. No fixes applied.
2025-06-15T16:17:25.3045926Z Found 21 warnings.
2025-06-15T16:17:25.3179536Z ##[group]Run npm run type-check
2025-06-15T16:17:25.3179844Z [36;1mnpm run type-check[0m
2025-06-15T16:17:25.3233220Z shell: /usr/bin/bash -e {0}
2025-06-15T16:17:25.3233455Z env:
2025-06-15T16:17:25.3233625Z   AWS_REGION: us-east-1
2025-06-15T16:17:25.3233827Z ##[endgroup]
2025-06-15T16:17:25.4495217Z 
2025-06-15T16:17:25.4495502Z > s3proxy@3.0.0 type-check
2025-06-15T16:17:25.4495907Z > tsc --noEmit
2025-06-15T16:17:25.4496099Z 
2025-06-15T16:17:27.1004233Z ##[group]Run npm run build
2025-06-15T16:17:27.1004499Z [36;1mnpm run build[0m
2025-06-15T16:17:27.1054237Z shell: /usr/bin/bash -e {0}
2025-06-15T16:17:27.1054469Z env:
2025-06-15T16:17:27.1054640Z   AWS_REGION: us-east-1
2025-06-15T16:17:27.1054836Z ##[endgroup]
2025-06-15T16:17:27.2286604Z 
2025-06-15T16:17:27.2286864Z > s3proxy@3.0.0 build
2025-06-15T16:17:27.2288180Z > echo "export const VERSION = '$(npm pkg get version --workspaces=false | tr -d '"')';" > src/version.ts && tsc && tsc -p tsconfig.examples.json && cp src/index.cjs dist/src/index.cjs
2025-06-15T16:17:27.2288765Z 
2025-06-15T16:17:30.6921331Z ##[group]Run npm run test:unit
2025-06-15T16:17:30.6921610Z [36;1mnpm run test:unit[0m
2025-06-15T16:17:30.6971957Z shell: /usr/bin/bash -e {0}
2025-06-15T16:17:30.6972177Z env:
2025-06-15T16:17:30.6972344Z   AWS_REGION: us-east-1
2025-06-15T16:17:30.6972536Z ##[endgroup]
2025-06-15T16:17:30.8315914Z 
2025-06-15T16:17:30.8316276Z > s3proxy@3.0.0 test:unit
2025-06-15T16:17:30.8316688Z > vitest run
2025-06-15T16:17:30.8316881Z 
2025-06-15T16:17:31.1324748Z 
2025-06-15T16:17:31.1326706Z [1m[46m RUN [49m[22m [36mv3.2.3 [39m[90m/home/runner/work/s3proxy/s3proxy[39m
2025-06-15T16:17:31.1327268Z 
2025-06-15T16:17:31.7020411Z  [32m✓[39m test/parseRequest.test.ts [2m([22m[2m6 tests[22m[2m)[22m[32m 9[2mms[22m[39m
2025-06-15T16:17:31.7192771Z  [31m❯[39m test/package-exports.test.ts [2m([22m[2m4 tests[22m[2m | [22m[31m3 failed[39m[2m)[22m[32m 241[2mms[22m[39m
2025-06-15T16:17:31.7196460Z    [32m✓[39m Package Exports[2m > [22mshould support ESM import from package root[32m 199[2mms[22m[39m
2025-06-15T16:17:31.7200389Z [31m   [31m×[31m Package Exports[2m > [22mshould support CommonJS require from package root[39m[32m 27[2mms[22m[39m
2025-06-15T16:17:31.7209300Z [31m     → require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
2025-06-15T16:17:31.7211657Z Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.[39m
2025-06-15T16:17:31.7213628Z [31m   [31m×[31m Package Exports[2m > [22mshould have consistent behavior between ESM and CJS[39m[32m 8[2mms[22m[39m
2025-06-15T16:17:31.7250000Z [31m     → require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
2025-06-15T16:17:31.7252451Z Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.[39m
2025-06-15T16:17:31.7254386Z [31m   [31m×[31m Package Exports[2m > [22mshould work with different require patterns[39m[32m 6[2mms[22m[39m
2025-06-15T16:17:31.7256375Z [31m     → require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
2025-06-15T16:17:31.7258914Z Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.[39m
2025-06-15T16:17:31.8718510Z  [32m✓[39m test/s3proxy.test.ts [2m([22m[2m20 tests[22m[2m)[22m[32m 100[2mms[22m[39m
2025-06-15T16:17:32.0676888Z  [31m❯[39m test/imports-cjs.test.ts [2m([22m[2m6 tests[22m[2m | [22m[31m6 failed[39m[2m)[22m[32m 67[2mms[22m[39m
2025-06-15T16:17:32.0680392Z [31m   [31m×[31m CommonJS Imports[2m > [22mshould require S3Proxy as default export[39m[32m 30[2mms[22m[39m
2025-06-15T16:17:32.0683036Z [31m     → require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
2025-06-15T16:17:32.0685511Z Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.[39m
2025-06-15T16:17:32.0687536Z [31m   [31m×[31m CommonJS Imports[2m > [22mshould require S3Proxy as named export[39m[32m 10[2mms[22m[39m
2025-06-15T16:17:32.0689861Z [31m     → require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
2025-06-15T16:17:32.0692383Z Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.[39m
2025-06-15T16:17:32.0695180Z [31m   [31m×[31m CommonJS Imports[2m > [22mshould be able to create S3Proxy instance from default export[39m[32m 6[2mms[22m[39m
2025-06-15T16:17:32.0697493Z [31m     → require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
2025-06-15T16:17:32.0700386Z Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.[39m
2025-06-15T16:17:32.0702646Z [31m   [31m×[31m CommonJS Imports[2m > [22mshould be able to create S3Proxy instance from named export[39m[32m 5[2mms[22m[39m
2025-06-15T16:17:32.0704939Z [31m     → require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
2025-06-15T16:17:32.0707480Z Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.[39m
2025-06-15T16:17:32.0709675Z [31m   [31m×[31m CommonJS Imports[2m > [22mshould have static version method[39m[32m 5[2mms[22m[39m
2025-06-15T16:17:32.0711700Z [31m     → require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
2025-06-15T16:17:32.0714201Z Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.[39m
2025-06-15T16:17:32.0716113Z [31m   [31m×[31m CommonJS Imports[2m > [22mshould have consistent exports[39m[32m 9[2mms[22m[39m
2025-06-15T16:17:32.0718333Z [31m     → require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
2025-06-15T16:17:32.0720919Z Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.[39m
2025-06-15T16:17:32.2194666Z  [31m❯[39m test/MockExpress.test.ts [2m([22m[2m4 tests[22m[2m | [22m[31m4 failed[39m[2m)[22m[32m 65[2mms[22m[39m
2025-06-15T16:17:32.2200630Z [31m   [31m×[31m MockExpress[2m > [22mshould handle head requests[39m[32m 44[2mms[22m[39m
2025-06-15T16:17:32.2201711Z [31m     → Could not load credentials from any providers[39m
2025-06-15T16:17:32.2202831Z [31m   [31m×[31m MockExpress[2m > [22mshould handle get requests[39m[32m 8[2mms[22m[39m
2025-06-15T16:17:32.2203838Z [31m     → Could not load credentials from any providers[39m
2025-06-15T16:17:32.2204949Z [31m   [31m×[31m MockExpress[2m > [22mshould handle range requests[39m[32m 5[2mms[22m[39m
2025-06-15T16:17:32.2206017Z [31m     → Could not load credentials from any providers[39m
2025-06-15T16:17:32.2207121Z [31m   [31m×[31m MockExpress[2m > [22mshould handle health check[39m[32m 6[2mms[22m[39m
2025-06-15T16:17:32.2208276Z [31m     → Could not load credentials from any providers[39m
2025-06-15T16:17:32.2757270Z  [32m✓[39m test/version.test.ts [2m([22m[2m5 tests[22m[2m)[22m[32m 4[2mms[22m[39m
2025-06-15T16:17:32.4798758Z  [32m✓[39m test/imports-esm.test.ts [2m([22m[2m4 tests[22m[2m)[22m[32m 3[2mms[22m[39m
2025-06-15T16:17:32.4910025Z 
2025-06-15T16:17:32.4911019Z [31m⎯⎯⎯⎯⎯⎯[39m[1m[41m Failed Tests 13 [49m[22m[31m⎯⎯⎯⎯⎯⎯⎯[39m
2025-06-15T16:17:32.4911502Z 
2025-06-15T16:17:32.4915692Z [41m[1m FAIL [22m[49m test/MockExpress.test.ts[2m > [22mMockExpress[2m > [22mshould handle head requests
2025-06-15T16:17:32.4921870Z [41m[1m FAIL [22m[49m test/MockExpress.test.ts[2m > [22mMockExpress[2m > [22mshould handle get requests
2025-06-15T16:17:32.4923637Z [41m[1m FAIL [22m[49m test/MockExpress.test.ts[2m > [22mMockExpress[2m > [22mshould handle range requests
2025-06-15T16:17:32.4925215Z [41m[1m FAIL [22m[49m test/MockExpress.test.ts[2m > [22mMockExpress[2m > [22mshould handle health check
2025-06-15T16:17:32.4948916Z [31m[1mCredentialsProviderError[22m: Could not load credentials from any providers[39m
2025-06-15T16:17:32.4950559Z [90m [2m❯[22m node_modules/@aws-sdk/credential-provider-node/dist-cjs/index.js:[2m129:13[22m[39m
2025-06-15T16:17:32.4952032Z [90m [2m❯[22m node_modules/@smithy/property-provider/dist-cjs/index.js:[2m99:33[22m[39m
2025-06-15T16:17:32.4953522Z [90m [2m❯[22m coalesceProvider node_modules/@smithy/property-provider/dist-cjs/index.js:[2m126:18[22m[39m
2025-06-15T16:17:32.4955020Z [90m [2m❯[22m node_modules/@smithy/property-provider/dist-cjs/index.js:[2m144:18[22m[39m
2025-06-15T16:17:32.4956251Z [90m [2m❯[22m node_modules/@smithy/core/dist-cjs/index.js:[2m85:17[22m[39m
2025-06-15T16:17:32.4957517Z [90m [2m❯[22m node_modules/@aws-sdk/middleware-sdk-s3/dist-cjs/index.js:[2m136:14[22m[39m
2025-06-15T16:17:32.4959210Z [90m [2m❯[22m node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js:[2m33:22[22m[39m
2025-06-15T16:17:32.4960424Z [36m [2m❯[22m S3Proxy.healthCheck src/index.ts:[2m253:5[22m[39m
2025-06-15T16:17:32.5009985Z     [90m251| [39m  [35mpublic[39m [35masync[39m [34mhealthCheck[39m()[33m:[39m [33mPromise[39m[33m<[39m[35mvoid[39m[33m>[39m {
2025-06-15T16:17:32.5012146Z     [90m252| [39m    [35mconst[39m command [33m=[39m [35mnew[39m [33mHeadBucketCommand[39m({ [33mBucket[39m[33m:[39m [35mthis[39m[33m.[39mbucket })[33m;[39m
2025-06-15T16:17:32.5013997Z     [90m253| [39m    [35mawait[39m [35mthis[39m[33m.[39ms3[33m?.[39m[34msend[39m(command)[33m;[39m
2025-06-15T16:17:32.5015022Z     [90m   | [39m    [31m^[39m
2025-06-15T16:17:32.5015761Z     [90m254| [39m  }
2025-06-15T16:17:32.5016183Z     [90m255| [39m
2025-06-15T16:17:32.5016928Z [90m [2m❯[22m S3Proxy.init src/index.ts:[2m243:7[22m[39m
2025-06-15T16:17:32.5017554Z 
2025-06-15T16:17:32.5018369Z [31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/13]⎯[22m[39m
2025-06-15T16:17:32.5018729Z 
2025-06-15T16:17:32.5019746Z [41m[1m FAIL [22m[49m test/imports-cjs.test.ts[2m > [22mCommonJS Imports[2m > [22mshould require S3Proxy as default export
2025-06-15T16:17:32.5031005Z [31m[1mError[22m: require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
2025-06-15T16:17:32.5034649Z Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.[39m
2025-06-15T16:17:32.5036256Z [90m [2m❯[22m Object.<anonymous> dist/src/index.cjs:[2m4:21[22m[39m
2025-06-15T16:17:32.5037179Z [36m [2m❯[22m test/imports-cjs.test.ts:[2m6:21[22m[39m
2025-06-15T16:17:32.5043085Z     [90m  5| [39m[35mconst[39m require [33m=[39m [34mcreateRequire[39m([35mimport[39m[33m.[39mmeta[33m.[39murl)[33m;[39m
2025-06-15T16:17:32.5044057Z     [90m  6| [39m
2025-06-15T16:17:32.5044875Z     [90m  7| [39m[34mdescribe[39m([32m'CommonJS Imports'[39m[33m,[39m () [33m=>[39m {
2025-06-15T16:17:32.5054670Z     [90m   | [39m                   [31m^[39m
2025-06-15T16:17:32.5055765Z     [90m  8| [39m  [34mit[39m([32m'should require S3Proxy as default export'[39m[33m,[39m () [33m=>[39m {
2025-06-15T16:17:32.5057242Z     [90m  9| [39m    [35mconst[39m [33mS3Proxy[39m [33m=[39m [34mrequire[39m([32m'../dist/src/index.cjs'[39m)[33m;[39m
2025-06-15T16:17:32.5058121Z 
2025-06-15T16:17:32.5058600Z [31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/13]⎯[22m[39m
2025-06-15T16:17:32.5058951Z 
2025-06-15T16:17:32.5059985Z [41m[1m FAIL [22m[49m test/imports-cjs.test.ts[2m > [22mCommonJS Imports[2m > [22mshould require S3Proxy as named export
2025-06-15T16:17:32.5062239Z [31m[1mError[22m: require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
2025-06-15T16:17:32.5065085Z Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.[39m
2025-06-15T16:17:32.5066803Z [90m [2m❯[22m Object.<anonymous> dist/src/index.cjs:[2m4:21[22m[39m
2025-06-15T16:17:32.5067937Z [36m [2m❯[22m test/imports-cjs.test.ts:[2m12:25[22m[39m
2025-06-15T16:17:32.5068565Z     [90m 10| [39m
2025-06-15T16:17:32.5069432Z     [90m 11| [39m    [34mexpect[39m([33mS3Proxy[39m)[33m.[39m[34mtoBeDefined[39m()[33m;[39m
2025-06-15T16:17:32.5070774Z     [90m 12| [39m    [34mexpect[39m([35mtypeof[39m [33mS3Proxy[39m)[33m.[39m[34mtoBe[39m([32m'function'[39m)[33m;[39m
2025-06-15T16:17:32.5071728Z     [90m   | [39m                        [31m^[39m
2025-06-15T16:17:32.5072800Z     [90m 13| [39m    [34mexpect[39m([33mS3Proxy[39m[33m.[39mname)[33m.[39m[34mtoBe[39m([32m'S3Proxy'[39m)[33m;[39m
2025-06-15T16:17:32.5073664Z     [90m 14| [39m  })[33m;[39m
2025-06-15T16:17:32.5073933Z 
2025-06-15T16:17:32.5074338Z [31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/13]⎯[22m[39m
2025-06-15T16:17:32.5074669Z 
2025-06-15T16:17:32.5075827Z [41m[1m FAIL [22m[49m test/imports-cjs.test.ts[2m > [22mCommonJS Imports[2m > [22mshould be able to create S3Proxy instance from default export
2025-06-15T16:17:32.5113615Z [31m[1mError[22m: require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
2025-06-15T16:17:32.5116765Z Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.[39m
2025-06-15T16:17:32.5119167Z [90m [2m❯[22m Object.<anonymous> dist/src/index.cjs:[2m4:21[22m[39m
2025-06-15T16:17:32.5121329Z [36m [2m❯[22m test/imports-cjs.test.ts:[2m18:21[22m[39m
2025-06-15T16:17:32.5122618Z     [90m 17| [39m    [35mconst[39m { [33mS3Proxy[39m } [33m=[39m [34mrequire[39m([32m'../dist/src/index.cjs'[39m)[33m;[39m
2025-06-15T16:17:32.5123548Z     [90m 18| [39m
2025-06-15T16:17:32.5124442Z     [90m 19| [39m    [34mexpect[39m([33mS3Proxy[39m)[33m.[39m[34mtoBeDefined[39m()[33m;[39m
2025-06-15T16:17:32.5125364Z     [90m   | [39m                   [31m^[39m
2025-06-15T16:17:32.5126534Z     [90m 20| [39m    [34mexpect[39m([35mtypeof[39m [33mS3Proxy[39m)[33m.[39m[34mtoBe[39m([32m'function'[39m)[33m;[39m
2025-06-15T16:17:32.5128237Z     [90m 21| [39m    [34mexpect[39m([33mS3Proxy[39m[33m.[39mname)[33m.[39m[34mtoBe[39m([32m'S3Proxy'[39m)[33m;[39m
2025-06-15T16:17:32.5128896Z 
2025-06-15T16:17:32.5131648Z [31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/13]⎯[22m[39m
2025-06-15T16:17:32.5131993Z 
2025-06-15T16:17:32.5133158Z [41m[1m FAIL [22m[49m test/imports-cjs.test.ts[2m > [22mCommonJS Imports[2m > [22mshould be able to create S3Proxy instance from named export
2025-06-15T16:17:32.5135502Z [31m[1mError[22m: require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
2025-06-15T16:17:32.5138510Z Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.[39m
2025-06-15T16:17:32.5140215Z [90m [2m❯[22m Object.<anonymous> dist/src/index.cjs:[2m4:21[22m[39m
2025-06-15T16:17:32.5141210Z [36m [2m❯[22m test/imports-cjs.test.ts:[2m24:25[22m[39m
2025-06-15T16:17:32.5141917Z     [90m 22| [39m  })[33m;[39m
2025-06-15T16:17:32.5142417Z     [90m 23| [39m
2025-06-15T16:17:32.5143231Z     [90m 24| [39m  it('should be able to create S3Proxy instance from default export', …
2025-06-15T16:17:32.5144125Z     [90m   | [39m                        [31m^[39m
2025-06-15T16:17:32.5145298Z     [90m 25| [39m    [35mconst[39m [33mS3Proxy[39m [33m=[39m [34mrequire[39m([32m'../dist/src/index.cjs'[39m)[33m;[39m
2025-06-15T16:17:32.5147141Z     [90m 26| [39m    [35mconst[39m proxy [33m=[39m [35mnew[39m [33mS3Proxy[39m({ bucket[33m:[39m [32m'test-bucket'[39m })[33m;[39m
2025-06-15T16:17:32.5158623Z 
2025-06-15T16:17:32.5159136Z [31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/13]⎯[22m[39m
2025-06-15T16:17:32.5159498Z 
2025-06-15T16:17:32.5160515Z [41m[1m FAIL [22m[49m test/imports-cjs.test.ts[2m > [22mCommonJS Imports[2m > [22mshould have static version method
2025-06-15T16:17:32.5162704Z [31m[1mError[22m: require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
2025-06-15T16:17:32.5165242Z Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.[39m
2025-06-15T16:17:32.5166902Z [90m [2m❯[22m Object.<anonymous> dist/src/index.cjs:[2m4:21[22m[39m
2025-06-15T16:17:32.5168062Z [36m [2m❯[22m test/imports-cjs.test.ts:[2m30:21[22m[39m
2025-06-15T16:17:32.5168764Z     [90m 30| [39m  })[33m;[39m
2025-06-15T16:17:32.5169245Z     [90m 31| [39m
2025-06-15T16:17:32.5170056Z     [90m 32| [39m  it('should be able to create S3Proxy instance from named export', ()…
2025-06-15T16:17:32.5170868Z     [90m   | [39m   [31m^[39m
2025-06-15T16:17:32.5171986Z     [90m 33| [39m    [35mconst[39m { [33mS3Proxy[39m } [33m=[39m [34mrequire[39m([32m'../dist/src/index.cjs'[39m)[33m;[39m
2025-06-15T16:17:32.5173607Z     [90m 34| [39m    [35mconst[39m proxy [33m=[39m [35mnew[39m [33mS3Proxy[39m({ bucket[33m:[39m [32m'test-bucket'[39m })[33m;[39m
2025-06-15T16:17:32.5174332Z 
2025-06-15T16:17:32.5174802Z [31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/13]⎯[22m[39m
2025-06-15T16:17:32.5175183Z 
2025-06-15T16:17:32.5176147Z [41m[1m FAIL [22m[49m test/imports-cjs.test.ts[2m > [22mCommonJS Imports[2m > [22mshould have consistent exports
2025-06-15T16:17:32.5178573Z [31m[1mError[22m: require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
2025-06-15T16:17:32.5181180Z Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.[39m
2025-06-15T16:17:32.5182841Z [90m [2m❯[22m Object.<anonymous> dist/src/index.cjs:[2m4:21[22m[39m
2025-06-15T16:17:32.5183778Z [36m [2m❯[22m test/imports-cjs.test.ts:[2m35:28[22m[39m
2025-06-15T16:17:32.5185146Z     [90m 34| [39m    [35mconst[39m proxy [33m=[39m [35mnew[39m [33mS3Proxy[39m({ bucket[33m:[39m [32m'test-bucket'[39m })[33m;[39m
2025-06-15T16:17:32.5186076Z     [90m 35| [39m
2025-06-15T16:17:32.5187007Z     [90m 36| [39m    [34mexpect[39m(proxy)[33m.[39m[34mtoBeInstanceOf[39m([33mS3Proxy[39m)[33m;[39m
2025-06-15T16:17:32.5188186Z     [90m   | [39m                          [31m^[39m
2025-06-15T16:17:32.5189341Z     [90m 37| [39m    [34mexpect[39m(proxy[33m.[39mbucket)[33m.[39m[34mtoBe[39m([32m'test-bucket'[39m)[33m;[39m
2025-06-15T16:17:32.5190275Z     [90m 38| [39m  })[33m;[39m
2025-06-15T16:17:32.5190815Z 
2025-06-15T16:17:32.5191264Z [31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/13]⎯[22m[39m
2025-06-15T16:17:32.5191619Z 
2025-06-15T16:17:32.5192762Z [41m[1m FAIL [22m[49m test/package-exports.test.ts[2m > [22mPackage Exports[2m > [22mshould support CommonJS require from package root
2025-06-15T16:17:32.5195108Z [31m[1mError[22m: require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
2025-06-15T16:17:32.5197911Z Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.[39m
2025-06-15T16:17:32.5199872Z [90m [2m❯[22m Object.<anonymous> dist/src/index.cjs:[2m4:21[22m[39m
2025-06-15T16:17:32.5230035Z [36m [2m❯[22m test/package-exports.test.ts:[2m11:21[22m[39m
2025-06-15T16:17:32.5231659Z     [90m 10| [39m    [35mconst[39m { [33mS3Proxy[39m } [33m=[39m [35mawait[39m [35mimport[39m([32m'../dist/src/index.js'[39m)[33m;[39m
2025-06-15T16:17:32.5232675Z     [90m 11| [39m
2025-06-15T16:17:32.5233553Z     [90m 12| [39m    [34mexpect[39m([33mS3Proxy[39m)[33m.[39m[34mtoBeDefined[39m()[33m;[39m
2025-06-15T16:17:32.5234427Z     [90m   | [39m                   [31m^[39m
2025-06-15T16:17:32.5235543Z     [90m 13| [39m    [34mexpect[39m([35mtypeof[39m [33mS3Proxy[39m)[33m.[39m[34mtoBe[39m([32m'function'[39m)[33m;[39m
2025-06-15T16:17:32.5236387Z     [90m 14| [39m  })[33m;[39m
2025-06-15T16:17:32.5236669Z 
2025-06-15T16:17:32.5237082Z [31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/13]⎯[22m[39m
2025-06-15T16:17:32.5237413Z 
2025-06-15T16:17:32.5238748Z [41m[1m FAIL [22m[49m test/package-exports.test.ts[2m > [22mPackage Exports[2m > [22mshould have consistent behavior between ESM and CJS
2025-06-15T16:17:32.5241122Z [31m[1mError[22m: require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
2025-06-15T16:17:32.5243749Z Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.[39m
2025-06-15T16:17:32.5245469Z [90m [2m❯[22m Object.<anonymous> dist/src/index.cjs:[2m4:21[22m[39m
2025-06-15T16:17:32.5246497Z [36m [2m❯[22m test/package-exports.test.ts:[2m17:23[22m[39m
2025-06-15T16:17:32.5247162Z     [90m 15| [39m
2025-06-15T16:17:32.5248383Z     [90m 16| [39m  [34mit[39m([32m'should support CommonJS require from package root'[39m[33m,[39m () [33m=>[39m {
2025-06-15T16:17:32.5249694Z     [90m 17| [39m    [90m// This tests the package.json "exports" field for require[39m
2025-06-15T16:17:32.5250561Z     [90m   | [39m                      [31m^[39m
2025-06-15T16:17:32.5251728Z     [90m 18| [39m    [35mconst[39m [33mS3Proxy[39m [33m=[39m [34mrequire[39m([32m'../dist/src/index.cjs'[39m)[33m;[39m
2025-06-15T16:17:32.5252649Z     [90m 19| [39m
2025-06-15T16:17:32.5252862Z 
2025-06-15T16:17:32.5253307Z [31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/13]⎯[22m[39m
2025-06-15T16:17:32.5253655Z 
2025-06-15T16:17:32.5254770Z [41m[1m FAIL [22m[49m test/package-exports.test.ts[2m > [22mPackage Exports[2m > [22mshould work with different require patterns
2025-06-15T16:17:32.5257089Z [31m[1mError[22m: require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
2025-06-15T16:17:32.5259887Z Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.[39m
2025-06-15T16:17:32.5261588Z [90m [2m❯[22m Object.<anonymous> dist/src/index.cjs:[2m4:21[22m[39m
2025-06-15T16:17:32.5262540Z [36m [2m❯[22m test/package-exports.test.ts:[2m26:22[22m[39m
2025-06-15T16:17:32.5263531Z     [90m 24| [39m  it('should have consistent behavior between ESM and CJS', async () =…
2025-06-15T16:17:32.5264850Z     [90m 25| [39m    const { S3Proxy: ESMImport } = await import('../dist/src/index.js'…
2025-06-15T16:17:32.5266272Z     [90m 26| [39m    [35mconst[39m [33mCJSImport[39m [33m=[39m [34mrequire[39m([32m'../dist/src/index.cjs'[39m)[33m;[39m
2025-06-15T16:17:32.5267333Z     [90m   | [39m                     [31m^[39m
2025-06-15T16:17:32.5268105Z     [90m 27| [39m
2025-06-15T16:17:32.5268799Z     [90m 28| [39m    [90m// Both should be the same constructor function[39m
2025-06-15T16:17:32.5269264Z 
2025-06-15T16:17:32.5269702Z [31m[2m⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/13]⎯[22m[39m
2025-06-15T16:17:32.5270048Z 
2025-06-15T16:17:32.5270065Z 
2025-06-15T16:17:32.5270809Z [2m Test Files [22m [1m[31m3 failed[39m[22m[2m | [22m[1m[32m4 passed[39m[22m[90m (7)[39m
2025-06-15T16:17:32.5272113Z [2m      Tests [22m [1m[31m13 failed[39m[22m[2m | [22m[1m[32m36 passed[39m[22m[90m (49)[39m
2025-06-15T16:17:32.5273275Z [2m   Start at [22m 16:17:31
2025-06-15T16:17:32.5274597Z [2m   Duration [22m 1.36s[2m (transform 209ms, setup 0ms, collect 1.25s, tests 490ms, environment 2ms, prepare 743ms)[22m
2025-06-15T16:17:32.5275305Z 
2025-06-15T16:17:32.5275316Z 
2025-06-15T16:17:32.5313223Z ##[error]CredentialsProviderError: Could not load credentials from any providers
 ❯ node_modules/@aws-sdk/credential-provider-node/dist-cjs/index.js:129:13
 ❯ node_modules/@smithy/property-provider/dist-cjs/index.js:99:33
 ❯ coalesceProvider node_modules/@smithy/property-provider/dist-cjs/index.js:126:18
 ❯ node_modules/@smithy/property-provider/dist-cjs/index.js:144:18
 ❯ node_modules/@smithy/core/dist-cjs/index.js:85:17
 ❯ node_modules/@aws-sdk/middleware-sdk-s3/dist-cjs/index.js:136:14
 ❯ node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js:33:22
 ❯ S3Proxy.healthCheck src/index.ts:253:5
 ❯ S3Proxy.init src/index.ts:243:7

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { tryNextLink: false }

2025-06-15T16:17:32.5327798Z 
2025-06-15T16:17:32.5336737Z ##[error]CredentialsProviderError: Could not load credentials from any providers
 ❯ node_modules/@aws-sdk/credential-provider-node/dist-cjs/index.js:129:13
 ❯ node_modules/@smithy/property-provider/dist-cjs/index.js:99:33
 ❯ coalesceProvider node_modules/@smithy/property-provider/dist-cjs/index.js:126:18
 ❯ node_modules/@smithy/property-provider/dist-cjs/index.js:144:18
 ❯ node_modules/@smithy/core/dist-cjs/index.js:85:17
 ❯ node_modules/@aws-sdk/middleware-sdk-s3/dist-cjs/index.js:136:14
 ❯ node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js:33:22
 ❯ S3Proxy.healthCheck src/index.ts:253:5
 ❯ S3Proxy.init src/index.ts:243:7

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { tryNextLink: false }

2025-06-15T16:17:32.5341529Z 
2025-06-15T16:17:32.5350879Z ##[error]CredentialsProviderError: Could not load credentials from any providers
 ❯ node_modules/@aws-sdk/credential-provider-node/dist-cjs/index.js:129:13
 ❯ node_modules/@smithy/property-provider/dist-cjs/index.js:99:33
 ❯ coalesceProvider node_modules/@smithy/property-provider/dist-cjs/index.js:126:18
 ❯ node_modules/@smithy/property-provider/dist-cjs/index.js:144:18
 ❯ node_modules/@smithy/core/dist-cjs/index.js:85:17
 ❯ node_modules/@aws-sdk/middleware-sdk-s3/dist-cjs/index.js:136:14
 ❯ node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js:33:22
 ❯ S3Proxy.healthCheck src/index.ts:253:5
 ❯ S3Proxy.init src/index.ts:243:7

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { tryNextLink: false }

2025-06-15T16:17:32.5357117Z 
2025-06-15T16:17:32.5365993Z ##[error]CredentialsProviderError: Could not load credentials from any providers
 ❯ node_modules/@aws-sdk/credential-provider-node/dist-cjs/index.js:129:13
 ❯ node_modules/@smithy/property-provider/dist-cjs/index.js:99:33
 ❯ coalesceProvider node_modules/@smithy/property-provider/dist-cjs/index.js:126:18
 ❯ node_modules/@smithy/property-provider/dist-cjs/index.js:144:18
 ❯ node_modules/@smithy/core/dist-cjs/index.js:85:17
 ❯ node_modules/@aws-sdk/middleware-sdk-s3/dist-cjs/index.js:136:14
 ❯ node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js:33:22
 ❯ S3Proxy.healthCheck src/index.ts:253:5
 ❯ S3Proxy.init src/index.ts:243:7

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { tryNextLink: false }

2025-06-15T16:17:32.5371220Z 
2025-06-15T16:17:32.5377555Z ##[error]Error: require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.
 ❯ Object.<anonymous> dist/src/index.cjs:4:21
 ❯ test/imports-cjs.test.ts:6:21

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: 'ERR_REQUIRE_ESM' }

2025-06-15T16:17:32.5381777Z 
2025-06-15T16:17:32.5388264Z ##[error]Error: require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.
 ❯ Object.<anonymous> dist/src/index.cjs:4:21
 ❯ test/imports-cjs.test.ts:12:25

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: 'ERR_REQUIRE_ESM' }

2025-06-15T16:17:32.5391930Z 
2025-06-15T16:17:32.5398876Z ##[error]Error: require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.
 ❯ Object.<anonymous> dist/src/index.cjs:4:21
 ❯ test/imports-cjs.test.ts:18:21

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: 'ERR_REQUIRE_ESM' }

2025-06-15T16:17:32.5402435Z 
2025-06-15T16:17:32.5409127Z ##[error]Error: require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.
 ❯ Object.<anonymous> dist/src/index.cjs:4:21
 ❯ test/imports-cjs.test.ts:24:25

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: 'ERR_REQUIRE_ESM' }

2025-06-15T16:17:32.5412822Z 
2025-06-15T16:17:32.5419251Z ##[error]Error: require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.
 ❯ Object.<anonymous> dist/src/index.cjs:4:21
 ❯ test/imports-cjs.test.ts:30:21

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: 'ERR_REQUIRE_ESM' }

2025-06-15T16:17:32.5422810Z 
2025-06-15T16:17:32.5429176Z ##[error]Error: require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.
 ❯ Object.<anonymous> dist/src/index.cjs:4:21
 ❯ test/imports-cjs.test.ts:35:28

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: 'ERR_REQUIRE_ESM' }

2025-06-15T16:17:32.5432956Z 
2025-06-15T16:17:32.5439558Z ##[error]Error: require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.
 ❯ Object.<anonymous> dist/src/index.cjs:4:21
 ❯ test/package-exports.test.ts:11:21

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: 'ERR_REQUIRE_ESM' }

2025-06-15T16:17:32.5443188Z 
2025-06-15T16:17:32.5449991Z ##[error]Error: require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.
 ❯ Object.<anonymous> dist/src/index.cjs:4:21
 ❯ test/package-exports.test.ts:17:23

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: 'ERR_REQUIRE_ESM' }

2025-06-15T16:17:32.5453753Z 
2025-06-15T16:17:32.5460282Z ##[error]Error: require() of ES Module /home/runner/work/s3proxy/s3proxy/dist/src/index.js from /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs not supported.
Instead change the require of index.js in /home/runner/work/s3proxy/s3proxy/dist/src/index.cjs to a dynamic import() which is available in all CommonJS modules.
 ❯ Object.<anonymous> dist/src/index.cjs:4:21
 ❯ test/package-exports.test.ts:26:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: 'ERR_REQUIRE_ESM' }

2025-06-15T16:17:32.6110717Z ##[error]Process completed with exit code 1.
2025-06-15T16:17:32.6211576Z Post job cleanup.
2025-06-15T16:17:32.7137101Z [command]/usr/bin/git version
2025-06-15T16:17:32.7172328Z git version 2.49.0
2025-06-15T16:17:32.7214976Z Temporarily overriding HOME='/home/runner/work/_temp/87088323-f3fd-4805-ad06-7f09aa199657' before making global git config changes
2025-06-15T16:17:32.7215834Z Adding repository directory to the temporary git global config as a safe directory
2025-06-15T16:17:32.7220401Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/s3proxy/s3proxy
2025-06-15T16:17:32.7254482Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-06-15T16:17:32.7285395Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-06-15T16:17:32.7501562Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-06-15T16:17:32.7520310Z http.https://github.com/.extraheader
2025-06-15T16:17:32.7532384Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-06-15T16:17:32.7562407Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-06-15T16:17:32.7882305Z Cleaning up orphan processes
