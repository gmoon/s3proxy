{
  "name": "s3proxy",
  "version": "1.6.5",
  "description": "Streaming web proxy for AWS S3",
  "main": "index.js",
  "devDependencies": {
    "artillery": "^1.7.9",
    "artillery-plugin-expect": "^2.2.1",
    "benchmark": "^2.1.4",
    "chai": "^4.3.7",
    "chai-http": "^4.3.0",
    "eslint": "^8.39.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-plugin-import": "^2.27.5",
    "express": "^4.18.2",
    "express-request-id": "^1.4.1",
    "helmet": "^6.1.5",
    "mega-linter-runner": "^6.22.2",
    "microtime": "^3.1.1",
    "mocha": "^10.2.0",
    "mocha-junit-reporter": "^2.2.0",
    "morgan": "^1.10.0",
    "nock": "^13.3.1",
    "npm-check-updates": "^16.10.9",
    "nyc": "^15.1.0",
    "sinon": "^15.0.4",
    "start-server-and-test": "^2.0.0",
    "wait-on": "^7.0.1"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.321.1",
    "url": "^0.11.0"
  },
  "scripts": {
    "eslint": "eslint *.js examples/*.js",
    "eslint-fix": "eslint --fix *.js examples/*.js",
    "start": "PORT=3000 node examples/express-basic.js",
    "test": "npm run eslint && npm run nyc-coverage && npm run artillery-ci && npm run package && npm run artillery-docker",
    "nyc-coverage": "MOCHA_FILE=test-results/mocha-junit.xml nyc --reporter=html --reporter=text mocha --reporter mocha-junit-reporter",
    "mocha": "mocha --reporter mocha-junit-reporter",
    "artillery-local-3000": "artillery run --target http://localhost:3000 --config test/artillery-config-quick.yml test/artillery.yml",
    "artillery-local-8080": "artillery run --target http://localhost:8080 --config test/artillery-config-quick.yml test/artillery.yml",
    "artillery-ecs": "artillery run --target https://s3proxy.forkzero.com --config test/artillery-config-quick.yml test/artillery.yml",
    "artillery-ci": "start-server-and-test start :3000 artillery-local-3000",
    "artillery-docker": "npm run credentials && docker run -v $PWD/credentials.json:/src/credentials.json:ro --rm --name s3proxy-test -d -p 8080:8080 -e BUCKET=s3proxy-public -e PORT=8080 -t s3proxy:test && wait-on http://localhost:8080/index.html && npm run artillery-local-8080; docker kill s3proxy-test",
    "artillery-perf-ecs": "artillery run --config test/artillery-config-perf-ecs.yml test/artillery.yml",
    "artillery-perf-apigw": "artillery run --config test/artillery-config-perf-apigw.yml test/artillery.yml",
    "package": "npm pack && mv s3proxy-*.tgz examples/docker/",
    "credentials": "aws sts get-session-token --duration 900 > credentials.json",
    "docker": "echo running s3proxy:test && npm run credentials && docker run -v $PWD/credentials.json:/src/credentials.json:ro -p 8080:8080 -e BUCKET=s3proxy-public -t s3proxy:test; rm credentials.json",
    "dockerize-for-test": "npm run package && cd examples/docker && docker buildx build --progress plain --build-arg VERSION=$npm_package_version --load -t s3proxy:test .",
    "dockerize-for-prod-aws": "cd examples/docker && docker buildx build --build-arg VERSION=$npm_package_version --push --target production -t ${AWS_ACCOUNT}.dkr.ecr.us-east-1.amazonaws.com/s3proxy:latest -t ${AWS_ACCOUNT}.dkr.ecr.us-east-1.amazonaws.com/s3proxy:$npm_package_version --platform=linux/amd64,linux/arm64 .",
    "dockerize-for-prod-dockerhub": "cd examples/docker && docker buildx build --build-arg VERSION=$npm_package_version --push --target production -t forkzero/s3proxy:$npm_package_version --platform=linux/amd64,linux/arm64 .",
    "software-bill-of-materials": "cd examples/docker && docker buildx build --build-arg VERSION=$npm_package_version --load --target production -t forkzero/s3proxy:$npm_package_version . && syft forkzero/s3proxy:$npm_package_version",
    "docker-login-aws": "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${AWS_ACCOUNT}.dkr.ecr.us-east-1.amazonaws.com",
    "docker-login-dockerhub": "docker login --username ${DOCKERHUB_USER} --password ${DOCKERHUB_ACCESS_TOKEN}",
    "cleanup": "rm -fv s3proxy*.tgz; rm -fv examples/docker/s3proxy*.tgz",
    "ncu-upgrade": "ncu --upgrade"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gmoon/s3proxy.git"
  },
  "files": [
    "README.md",
    "LICENSE",
    "*.js"
  ],
  "keywords": [
    "aws",
    "s3",
    "proxy",
    "node",
    "nodejs",
    "http",
    "express"
  ],
  "author": "George Moon <george.moon@gmail.com>",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/gmoon/s3proxy/issues"
  },
  "homepage": "https://github.com/gmoon/s3proxy#readme"
}
