{
  "name": "s3proxy",
  "version": "3.0.0",
  "description": "Streaming web proxy for AWS S3",
  "main": "dist/src/index.js",
  "types": "dist/src/index.d.ts",
  "type": "module",
  "exports": {
    ".": {
      "types": "./dist/src/index.d.ts",
      "import": "./dist/src/index.js",
      "require": "./dist/src/index.cjs"
    }
  },
  "devDependencies": {
    "@aws-sdk/client-s3": "^3.731.1",
    "@biomejs/biome": "^1.9.4",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/commit-analyzer": "^13.0.1",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/github": "^11.0.3",
    "@semantic-release/npm": "^12.0.1",
    "@semantic-release/release-notes-generator": "^14.0.3",
    "@types/express": "^5.0.3",
    "@types/node": "^24.0.1",
    "@vitest/coverage-v8": "^3.2.3",
    "artillery": "^2.0.21",
    "artillery-plugin-expect": "^2.16.0",
    "aws-sdk-client-mock": "^4.1.0",
    "benchmark": "^2.1.4",
    "body-parser": "^1.20.3",
    "debug": "^4.4.1",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-plugin-import": "^2.31.0",
    "express": "^4.21.2",
    "express-request-id": "^1.4.1",
    "helmet": "^7.2.0",
    "mega-linter-runner": "^7.13.0",
    "microtime": "^3.1.1",
    "morgan": "^1.10.0",
    "nock": "^13.5.6",
    "npm-check-updates": "^16.14.20",
    "semantic-release": "^24.2.5",
    "start-server-and-test": "^2.0.10",
    "tsx": "^4.20.3",
    "typescript": "^5.8.3",
    "vitest": "^3.2.3",
    "wait-on": "^7.2.0"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.731.1"
  },
  "scripts": {
    "build": "echo \"export const VERSION = '$(npm pkg get version --workspaces=false | tr -d '\"')';\" > src/version.ts && tsc && tsc -p tsconfig.examples.json && cp src/index.cjs dist/src/index.cjs",
    "build:watch": "tsc --watch",
    "dev": "tsx examples/express-basic.ts",
    "start": "node dist/examples/express-basic.js",
    "test": "npm run test:core",
    "test:core": "npm run test:unit && npm run test:integration",
    "test:all": "npm run test:core && npm run test:performance",
    "test:performance": "npm run test:load:all && npm run test:docker:all",
    "test:unit": "vitest run",
    "test:coverage": "vitest run --coverage",
    "test:integration": "npm run lint && npm run type-check",
    "test:load:all": "npm run test:load:npm && npm run test:load:sustained && npm run test:load:spike && npm run test:load:range",
    "test:docker:all": "npm run test:load:docker && npm run test:load:compare",
    "test:watch": "vitest",
    "lint": "biome check src examples test",
    "lint:fix": "biome check --write src examples test",
    "format": "biome format --write src examples test",
    "type-check": "tsc --noEmit",
    "clean": "rm -rf dist coverage",
    "prepublishOnly": "npm run clean && npm run build && npm run test:unit",
    "test:load": "npm run test:load:npm",
    "test:load:npm": "TEST_ENVIRONMENT=npm-package artillery run --config shared-testing/configs/npm-package.yml shared-testing/scenarios/basic-load.yml",
    "test:load:docker": "npm run dockerize-for-test && TEST_ENVIRONMENT=docker-container artillery run --config shared-testing/configs/docker-container.yml shared-testing/scenarios/basic-load.yml",
    "test:load:sustained": "TEST_ENVIRONMENT=npm-package artillery run --config shared-testing/configs/performance-comparison.yml shared-testing/scenarios/sustained-load.yml",
    "test:load:spike": "TEST_ENVIRONMENT=npm-package artillery run --config shared-testing/configs/performance-comparison.yml shared-testing/scenarios/spike-load.yml",
    "test:load:range": "TEST_ENVIRONMENT=npm-package artillery run --config shared-testing/configs/npm-package.yml shared-testing/scenarios/range-requests.yml",
    "test:load:compare": "node shared-testing/utils/results-parser.js compare",
    "release:dry-run": "semantic-release --dry-run",
    "release:local": "semantic-release --no-ci",
    "package:verify": "npm pack --dry-run",
    "package:contents": "npm pack && tar -tzf *.tgz && rm *.tgz",
    "pr:create": "./scripts/create-pr.sh",
    "artillery-local-8080": "TEST_ENVIRONMENT=docker-container artillery run --config shared-testing/configs/docker-container.yml shared-testing/scenarios/basic-load.yml",
    "artillery-ecs": "artillery run --target https://s3proxy.forkzero.com --config shared-testing/configs/artillery-config-quick.yml shared-testing/scenarios/artillery.yml",
    "artillery-docker": "npm run credentials && docker run -v $PWD/credentials.json:/src/credentials.json:ro --rm --name s3proxy-test -d -p 8080:8080 -e BUCKET=s3proxy-public -e AWS_REGION=us-east-1 -e PORT=8080 -t s3proxy:test && wait-on http://localhost:8080/index.html && npm run artillery-local-8080; docker kill s3proxy-test",
    "artillery-perf-ecs": "artillery run --config shared-testing/configs/artillery-config-perf-ecs.yml shared-testing/scenarios/artillery.yml",
    "artillery-perf-apigw": "artillery run --config shared-testing/configs/artillery-config-perf-apigw.yml shared-testing/scenarios/artillery.yml",
    "package": "npm run build && npm pack && mv s3proxy-*.tgz examples/docker/",
    "credentials": "aws sts get-session-token --duration 900 > credentials.json",
    "docker": "echo running s3proxy:test && npm run credentials && docker run -v $PWD/credentials.json:/src/credentials.json:ro -p 8080:8080 -e BUCKET=s3proxy-public -e AWS_REGION=us-east-1 -t s3proxy:test; rm credentials.json",
    "dockerize-for-test": "npm run package && cd examples/docker && docker buildx build --progress plain --build-arg VERSION=$npm_package_version --load -t s3proxy:test .",
    "dockerize-for-prod-aws": "cd examples/docker && docker buildx build --build-arg VERSION=$npm_package_version --push --target production -t ${AWS_ACCOUNT}.dkr.ecr.us-east-1.amazonaws.com/s3proxy:latest -t ${AWS_ACCOUNT}.dkr.ecr.us-east-1.amazonaws.com/s3proxy:$npm_package_version --platform=linux/amd64,linux/arm64 .",
    "dockerize-for-prod-dockerhub": "cd examples/docker && docker buildx build --build-arg VERSION=$npm_package_version --push --target production -t forkzero/s3proxy:$npm_package_version --platform=linux/amd64,linux/arm64 .",
    "software-bill-of-materials": "cd examples/docker && docker buildx build --build-arg VERSION=$npm_package_version --load --target production -t forkzero/s3proxy:$npm_package_version . && syft forkzero/s3proxy:$npm_package_version",
    "docker-login-aws": "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${AWS_ACCOUNT}.dkr.ecr.us-east-1.amazonaws.com",
    "docker-login-dockerhub": "docker login --username ${DOCKERHUB_USER} --password ${DOCKERHUB_ACCESS_TOKEN}",
    "cleanup": "rm -fv s3proxy*.tgz; rm -fv examples/docker/s3proxy*.tgz",
    "ncu-upgrade": "ncu --upgrade"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gmoon/s3proxy.git"
  },
  "files": [
    "dist/src/**/*",
    "README.md",
    "LICENSE"
  ],
  "keywords": [
    "aws",
    "s3",
    "proxy",
    "node",
    "nodejs",
    "http",
    "express",
    "typescript"
  ],
  "author": "George Moon <george.moon@gmail.com>",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/gmoon/s3proxy/issues"
  },
  "homepage": "https://github.com/gmoon/s3proxy#readme"
}
